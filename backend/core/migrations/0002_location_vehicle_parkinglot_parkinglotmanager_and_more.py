# Generated by Django 5.0.3 on 2024-03-15 10:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('address', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateNumber', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=50)),
                ('ownerName', models.CharField(max_length=255)),
                ('ownerContact', models.CharField(max_length=20)),
                ('ownerAddress', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ParkingLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('capacity', models.IntegerField()),
                ('currentAvailability', models.IntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location')),
            ],
        ),
        migrations.CreateModel(
            name='ParkingLotManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phoneNumber', models.CharField(max_length=20)),
                ('parkingLot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parkinglot')),
            ],
        ),
        migrations.AddField(
            model_name='parkinglot',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parkinglotmanager'),
        ),
        migrations.CreateModel(
            name='ParkingSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('standard', 'Standard'), ('premium', 'Premium')], max_length=20)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('reserved', 'Reserved')], max_length=20)),
                ('reservedFor', models.IntegerField()),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parkinglot')),
            ],
        ),
        migrations.CreateModel(
            name='ParkingTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
                ('amountPaid', models.FloatField()),
                ('transactionId', models.IntegerField()),
                ('transactionStatus', models.CharField(max_length=20)),
                ('parkingLot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parkinglot')),
                ('parkingSpace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parkingspace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vehicle')),
            ],
        ),
    ]
